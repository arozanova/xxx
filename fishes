#include <stack>
#include <tuple>

void AddFish(int a, int b, stack<tuple<int,int>> & s )
{
   // std::make_tuple(a,b);
   if (s.size()==0)
   {
       s.emplace(a,b);
   }
   else if (std::get<1>(s.top()) == b)
   {
       // same direction
       s.emplace(a,b);
   }
   else if (b == 1)
   {
       // opposite direction, no cross
        s.emplace(a,b);
   }
   else if (a < std::get<0>(s.top()))
   {
       // stack fish is bigger, we are eaten
       // no change
   }
   else
   {
       // stack fish is smaller, is eaten
       s.pop();
       // reevaluate next stack fish
       AddFish(a, b, s);
   }
}
 

int solution(vector<int> &A, vector<int> &B) {
    
    if (A.size()==1)
        return 1;
        
    stack<tuple<int,int>> s;
    
    for (size_t i = 0; i < A.size(); ++i)
    {
        AddFish(A[i],B[i], s);
    }
    
    return s.size();
}
